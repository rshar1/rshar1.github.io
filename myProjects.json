[
    {
        "id" : "grow_with_google",
        "title" : "Grow With Google Challenge", 
        "image" : "images/growwithgoogle.png",
        "summary" : "Online program with Udacity and Google, to learn android and develop apps as part of the program",
        "description" : "In January of 2018, I was invited to complete the Google Grow with Google Android Challenge. The goal of this program is to provide students with access to the first few Courses of the Udacity Android Nanodegree program. After doing well in the initial invitation, I was then invited to continue learning until the end of the program, ending in October of 2018. As part of the nanodegree, I am creating multiple apps, learning in depth about android, and working on a capstone project.",
        "link" : ""
    }, 
    {
        "id" : "code-u", 
        "title" : "Google CodeU Participant",
        "image" : "images/google.png", 
        "summary" : "In 2017, I participated in Google CodeU, where I worked with two peers to improve a chat application. Added features included: GUI, real-time messages, sentiment analysis, and persistancy.",
        "description" : "This project which was hosted by Google had me working with two peers and a Google engineer to add features to a very basic chat application. We were essentially given a simple server and client application written in Java and run from the command line. It very simply allowed messages to be sent between users. My group and I, discussed that we would like to make the messages arrive in real time, create a GUI application and add persisitency. We split up the tasks so each of us was in charge of something, with me being in charge of the real time messaging. We posted our code onto github and conducted code reviews of each others code. ",
        "link" : "https://github.com/rshar1/codeu_project_2017"
    }, 
    {
        "id" : "spider-time", 
        "title" : "Spider Time",
        "image" : "images/spidertime.jpg", 
        "summary" : "Play as a spider and survive by eating other insects. Beware of the red insects. Created using the TreSensa Game Engine",
        "description" : "This was a game that I created with the intention of learning about the TreSensa game engine. It allows the player to move around eating insects",
        "link" : "http://rshar1.github.io/Spidertime/"
    },
    {
        "id" : "appliedCSWithAndroid", 
        "title" : "Applied CS With Android",
        "image" : "images/droid.png",
        "summary" : "Projects I worked on as part of the Applied CS with Android course. These courses were meant as a way to explore the application of data structures and algorithms, by developing android apps",
        "description" : "Applied CS with Android is a free online course offered by Google that allows students to see first hand how data structures and algorithms can be applied to real word apps in order to accelerate their processing. I worked on this course as a way to get started with android, such that I can improve upon my knowledge of the important Data Structures and Algorithms",
        "link" : "https://github.com/rshar1/AppliedCSWithAndroid"
    }, 
    {
        "id" : "online_game_chat_room",
        "title" : "Online Game and Chat Room",
        "image" : "",
        "summary" : "An online Game and Chat room I built using Firebase. This application allows users to chat, as well as invite each other to play tic-tac-toe or battleship online. ",
        "description" : "This project was something I worked on to learn about Firebase. At first, I started by following the getting started guide for Firebase, which had to do with developing a chat room. I then extended it to allow people to play tic-tac-toe with one another. I did this by allowing users to type in commands that would invite other users to a game. The other user can then accept or deny the invitation. I then added Battleship which was done using a canvas in HTML and tracking mouse clicks. Moves were submitted through firebase, similar to how messages were sent between users. ",
        "link" : "https://github.com/rshar1/Game-room"
    }, 
    {
        "id" : "virtual-tour", 
        "title" : "Virtual Tour",
        "image" : "images/vtourPic.jpg", 
        "summary" : "Enjoy a virtual tour of the Bayside Historical Society. Created using an HTML canvas, along with JavaScript", 
        "description": "",
        "link" : ""
    }, 
    {
        "id" : "businesses-of-bayside", 
        "title" : "Businesses of Bayside",
        "image" : "images/bobimg.jpg", 
        "summary" : "An online exhibit of some of the businesses in Bayside",
        "description" : "",
        "link" : ""
    },
    {
        "id" : "lirr-track-scraper",
        "title" : "LIRR Track Scraper",
        "image" : "",
        "summary" : "A web scraper that I built in python in order to explore web scraping with BeautifulSoup, along with improving my commute",
        "description" : "Out of an interest in webscraping as well as improving my commute ever so slightly, I created this web scraper to watch and record the tracks for the LIRR. Anyone who has ridden the LIRR knows that the depearture track is announced 10 mins prior to departure. In order to beat the rush when the track is announced, I created this web scraper to watch the tracks for two months, running on my Raspberry Pi at home. With the webscraping I also built a web monitor so I could monitor the application and see the live data being collected, while outside the house. I was then able to analyze the data and find trends in the tracks, so that I could now beat the rush, especially during the rush hour commute. ",
        "link" : ""
    },
    {
        "id" : "cs488-optack",
        "title" : "Optimistic Ack Attack",
        "image" : "",
        "summary" : "A proof of concept to show an optimistic ack attack on TCP, using mininet and written in C",
        "description" : "An optimistic ack attack is a denial of service attack that takes advantage of TCP's congestion control mechanism. The basic concept of this attack is for an attacker to send acks before actually receiving the packets. By doing this, the victim will not pick up on lost messages and will continue to increase it's congestion window. This can potentially be exploited to cause a network collapse. The purpose of this project was to use mininet to show that this attack was doable in a relatively simple manner. My partner, Edward Gervis, and I open sourced the code and provided instructions on how to pull off a demo of this attack. We also prepared a presentation explaining the attack as well as our implementation. <iframe src='https://docs.google.com/presentation/d/e/2PACX-1vSAsLxztJdPXZxVdU6OdCCXyyZ-oQJ5863fzozMuvw8VStZ0AKYwoo5WPofqOG0hLaWdE1bJpgESzMn/embed?start=false&loop=false&delayms=3000' frameborder='0' width='480' height='299' allowfullscreen='true' mozallowfullscreen='true' webkitallowfullscreen='true'></iframe> ",
        "link" : "https://github.com/rshar1/CS488/tree/master/Project3"
    },
    {
        "id" : "ez-attend",
        "title" : "Ez-Attend Android App",
        "image" : "https://github.com/paceuniversity/cs389s2019team5/raw/snapshot-sprint3/EzAttend/app/src/main/res/drawable-hdpi/logo.png",
        "summary" : "Term project for Software Engineering at Pace University",
        "description" : "This was the term project for my software engineering course at Pace University. I worked in a group of three to practice Agile methods while creating an android application. The purpose of our application was to speed up the attendance process and make it more seamless especially for younger students that may not be able to use other technological solutions for attendance. As part of the project we participitated in scrum meetings, filled out a backlog, and conducted code reviews. Documentation can be found in the wiki of the github repo.",
        "link" : "https://github.com/paceuniversity/cs389s2019team5"
    },
    {
        "id" : "cs488-rudp",
        "title" : "Reliable UDP",
        "image" : "",
        "summary" : "As part of CS 488, at Pace University, we implemented reliablity into UDP such that packets are automatically resent",
        "description" : "In contrast to TCP, UDP has no reliability. In introduction to networking, the purpose of this project was to add some of the reliability in TCP to UDP. To do that my partner and I implemented our own networking protocol called RUDP that essentially ensures that all UDP packets arrive in the right order at the receiver. We did this in a very modular fashion such that the RUDP protocol can be used in most java applications that currently uses TCP sockets. That is, we created our own socket class called RUDPSocket that for the most part has the same interface as regular sockets in Java. I demonstrate this by also creating a very simple file transfer application with a central server and multiple clients transferring files.",
        "link" : "https://github.com/rshar1/CS488/tree/master/Project1"
    }
]